// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: product/product.proto

package product

import (
	general "github.com/paper-trade-chatbot/be-proto/general"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductType int32

const (
	ProductType_ProductType_None    ProductType = 0
	ProductType_ProductType_Stock   ProductType = 1
	ProductType_ProductType_Crypto  ProductType = 2
	ProductType_ProductType_Forex   ProductType = 3
	ProductType_ProductType_Futures ProductType = 4
)

// Enum value maps for ProductType.
var (
	ProductType_name = map[int32]string{
		0: "ProductType_None",
		1: "ProductType_Stock",
		2: "ProductType_Crypto",
		3: "ProductType_Forex",
		4: "ProductType_Futures",
	}
	ProductType_value = map[string]int32{
		"ProductType_None":    0,
		"ProductType_Stock":   1,
		"ProductType_Crypto":  2,
		"ProductType_Forex":   3,
		"ProductType_Futures": 4,
	}
)

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[0].Descriptor()
}

func (ProductType) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[0]
}

func (x ProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductType.Descriptor instead.
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_Status_None     Status = 0
	Status_Status_Enabled  Status = 1
	Status_Status_Disabled Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Status_None",
		1: "Status_Enabled",
		2: "Status_Disabled",
	}
	Status_value = map[string]int32{
		"Status_None":     0,
		"Status_Enabled":  1,
		"Status_Disabled": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

type Display int32

const (
	Display_Display_None     Display = 0
	Display_Display_Enabled  Display = 1
	Display_Display_Disabled Display = 2
)

// Enum value maps for Display.
var (
	Display_name = map[int32]string{
		0: "Display_None",
		1: "Display_Enabled",
		2: "Display_Disabled",
	}
	Display_value = map[string]int32{
		"Display_None":     0,
		"Display_Enabled":  1,
		"Display_Disabled": 2,
	}
)

func (x Display) Enum() *Display {
	p := new(Display)
	*p = x
	return p
}

func (x Display) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Display) Descriptor() protoreflect.EnumDescriptor {
	return file_product_product_proto_enumTypes[2].Descriptor()
}

func (Display) Type() protoreflect.EnumType {
	return &file_product_product_proto_enumTypes[2]
}

func (x Display) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Display.Descriptor instead.
func (Display) EnumDescriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

type ExchangeDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDay int32 `protobuf:"varint,1,opt,name=startDay,proto3" json:"startDay,omitempty"`
	EndDay   int32 `protobuf:"varint,2,opt,name=endDay,proto3" json:"endDay,omitempty"`
}

func (x *ExchangeDay) Reset() {
	*x = ExchangeDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeDay) ProtoMessage() {}

func (x *ExchangeDay) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeDay.ProtoReflect.Descriptor instead.
func (*ExchangeDay) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *ExchangeDay) GetStartDay() int32 {
	if x != nil {
		return x.StartDay
	}
	return 0
}

func (x *ExchangeDay) GetEndDay() int32 {
	if x != nil {
		return x.EndDay
	}
	return 0
}

type ExceptionTimeFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ExceptionTimeFormat) Reset() {
	*x = ExceptionTimeFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionTimeFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionTimeFormat) ProtoMessage() {}

func (x *ExceptionTimeFormat) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionTimeFormat.ProtoReflect.Descriptor instead.
func (*ExceptionTimeFormat) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *ExceptionTimeFormat) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ExceptionTimeFormat) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type ExceptionTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade     []*ExceptionTimeFormat `protobuf:"bytes,1,rep,name=trade,proto3" json:"trade,omitempty"`
	StopTrade []*ExceptionTimeFormat `protobuf:"bytes,2,rep,name=stopTrade,proto3" json:"stopTrade,omitempty"`
}

func (x *ExceptionTime) Reset() {
	*x = ExceptionTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionTime) ProtoMessage() {}

func (x *ExceptionTime) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionTime.ProtoReflect.Descriptor instead.
func (*ExceptionTime) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *ExceptionTime) GetTrade() []*ExceptionTimeFormat {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *ExceptionTime) GetStopTrade() []*ExceptionTimeFormat {
	if x != nil {
		return x.StopTrade
	}
	return nil
}

type Exchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ProductType    ProductType    `protobuf:"varint,2,opt,name=productType,proto3,enum=product.ProductType" json:"productType,omitempty"`
	Name           string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status         Status         `protobuf:"varint,4,opt,name=status,proto3,enum=product.Status" json:"status,omitempty"`
	Display        Display        `protobuf:"varint,5,opt,name=display,proto3,enum=product.Display" json:"display,omitempty"`
	CountryCode    string         `protobuf:"bytes,6,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	TimezoneOffset float64        `protobuf:"fixed64,7,opt,name=timezoneOffset,proto3" json:"timezoneOffset,omitempty"`
	OpenTime       *int64         `protobuf:"varint,8,opt,name=openTime,proto3,oneof" json:"openTime,omitempty"`
	CloseTime      *int64         `protobuf:"varint,9,opt,name=closeTime,proto3,oneof" json:"closeTime,omitempty"`
	DaylightSaving bool           `protobuf:"varint,10,opt,name=daylightSaving,proto3" json:"daylightSaving,omitempty"`
	Location       string         `protobuf:"bytes,11,opt,name=location,proto3" json:"location,omitempty"`
	ExchangeDay    *ExchangeDay   `protobuf:"bytes,12,opt,name=exchangeDay,proto3" json:"exchangeDay,omitempty"`
	ExceptionTime  *ExceptionTime `protobuf:"bytes,13,opt,name=exceptionTime,proto3" json:"exceptionTime,omitempty"`
	CreatedAt      int64          `protobuf:"varint,14,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      int64          `protobuf:"varint,15,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Exchange) Reset() {
	*x = Exchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exchange) ProtoMessage() {}

func (x *Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exchange.ProtoReflect.Descriptor instead.
func (*Exchange) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *Exchange) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Exchange) GetProductType() ProductType {
	if x != nil {
		return x.ProductType
	}
	return ProductType_ProductType_None
}

func (x *Exchange) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Exchange) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Status_None
}

func (x *Exchange) GetDisplay() Display {
	if x != nil {
		return x.Display
	}
	return Display_Display_None
}

func (x *Exchange) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Exchange) GetTimezoneOffset() float64 {
	if x != nil {
		return x.TimezoneOffset
	}
	return 0
}

func (x *Exchange) GetOpenTime() int64 {
	if x != nil && x.OpenTime != nil {
		return *x.OpenTime
	}
	return 0
}

func (x *Exchange) GetCloseTime() int64 {
	if x != nil && x.CloseTime != nil {
		return *x.CloseTime
	}
	return 0
}

func (x *Exchange) GetDaylightSaving() bool {
	if x != nil {
		return x.DaylightSaving
	}
	return false
}

func (x *Exchange) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Exchange) GetExchangeDay() *ExchangeDay {
	if x != nil {
		return x.ExchangeDay
	}
	return nil
}

func (x *Exchange) GetExceptionTime() *ExceptionTime {
	if x != nil {
		return x.ExceptionTime
	}
	return nil
}

func (x *Exchange) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Exchange) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Status  *Status  `protobuf:"varint,2,opt,name=status,proto3,enum=product.Status,oneof" json:"status,omitempty"`
	Display *Display `protobuf:"varint,3,opt,name=display,proto3,enum=product.Display,oneof" json:"display,omitempty"`
}

func (x *GetExchangeReq) Reset() {
	*x = GetExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeReq) ProtoMessage() {}

func (x *GetExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeReq.ProtoReflect.Descriptor instead.
func (*GetExchangeReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *GetExchangeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetExchangeReq) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_Status_None
}

func (x *GetExchangeReq) GetDisplay() Display {
	if x != nil && x.Display != nil {
		return *x.Display
	}
	return Display_Display_None
}

type GetExchangeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *GetExchangeRes) Reset() {
	*x = GetExchangeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRes) ProtoMessage() {}

func (x *GetExchangeRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRes.ProtoReflect.Descriptor instead.
func (*GetExchangeRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *GetExchangeRes) GetExchange() *Exchange {
	if x != nil {
		return x.Exchange
	}
	return nil
}

type GetExchangesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *general.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetExchangesReq) Reset() {
	*x = GetExchangesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesReq) ProtoMessage() {}

func (x *GetExchangesReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesReq.ProtoReflect.Descriptor instead.
func (*GetExchangesReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *GetExchangesReq) GetPagination() *general.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetExchangesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange       []*Exchange             `protobuf:"bytes,1,rep,name=exchange,proto3" json:"exchange,omitempty"`
	PaginationInfo *general.PaginationInfo `protobuf:"bytes,2,opt,name=paginationInfo,proto3" json:"paginationInfo,omitempty"`
}

func (x *GetExchangesRes) Reset() {
	*x = GetExchangesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExchangesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangesRes) ProtoMessage() {}

func (x *GetExchangesRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangesRes.ProtoReflect.Descriptor instead.
func (*GetExchangesRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *GetExchangesRes) GetExchange() []*Exchange {
	if x != nil {
		return x.Exchange
	}
	return nil
}

func (x *GetExchangesRes) GetPaginationInfo() *general.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type         ProductType `protobuf:"varint,2,opt,name=type,proto3,enum=product.ProductType" json:"type,omitempty"`
	ExchangeCode string      `protobuf:"bytes,3,opt,name=exchangeCode,proto3" json:"exchangeCode,omitempty"`
	Code         string      `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Name         string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Status       Status      `protobuf:"varint,6,opt,name=status,proto3,enum=product.Status" json:"status,omitempty"`
	Display      Display     `protobuf:"varint,7,opt,name=display,proto3,enum=product.Display" json:"display,omitempty"`
	CurrencyCode string      `protobuf:"bytes,8,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	TickUnit     float64     `protobuf:"fixed64,9,opt,name=tickUnit,proto3" json:"tickUnit,omitempty"`
	MinimumOrder *float64    `protobuf:"fixed64,10,opt,name=minimumOrder,proto3,oneof" json:"minimumOrder,omitempty"`
	IconID       *string     `protobuf:"bytes,11,opt,name=iconID,proto3,oneof" json:"iconID,omitempty"`
	CreatedAt    int64       `protobuf:"varint,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64       `protobuf:"varint,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *Product) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetType() ProductType {
	if x != nil {
		return x.Type
	}
	return ProductType_ProductType_None
}

func (x *Product) GetExchangeCode() string {
	if x != nil {
		return x.ExchangeCode
	}
	return ""
}

func (x *Product) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Status_None
}

func (x *Product) GetDisplay() Display {
	if x != nil {
		return x.Display
	}
	return Display_Display_None
}

func (x *Product) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Product) GetTickUnit() float64 {
	if x != nil {
		return x.TickUnit
	}
	return 0
}

func (x *Product) GetMinimumOrder() float64 {
	if x != nil && x.MinimumOrder != nil {
		return *x.MinimumOrder
	}
	return 0
}

func (x *Product) GetIconID() string {
	if x != nil && x.IconID != nil {
		return *x.IconID
	}
	return ""
}

func (x *Product) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Product) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type CreateProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         ProductType `protobuf:"varint,1,opt,name=type,proto3,enum=product.ProductType" json:"type,omitempty"`
	ExchangeCode string      `protobuf:"bytes,2,opt,name=exchangeCode,proto3" json:"exchangeCode,omitempty"`
	Code         string      `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Name         string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Status       Status      `protobuf:"varint,5,opt,name=status,proto3,enum=product.Status" json:"status,omitempty"`
	Display      Display     `protobuf:"varint,6,opt,name=display,proto3,enum=product.Display" json:"display,omitempty"`
	CurrencyCode string      `protobuf:"bytes,7,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	TickUnit     float64     `protobuf:"fixed64,8,opt,name=tickUnit,proto3" json:"tickUnit,omitempty"`
	MinimumOrder *float64    `protobuf:"fixed64,9,opt,name=minimumOrder,proto3,oneof" json:"minimumOrder,omitempty"`
	IconID       *string     `protobuf:"bytes,10,opt,name=iconID,proto3,oneof" json:"iconID,omitempty"`
}

func (x *CreateProductReq) Reset() {
	*x = CreateProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductReq) ProtoMessage() {}

func (x *CreateProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductReq.ProtoReflect.Descriptor instead.
func (*CreateProductReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *CreateProductReq) GetType() ProductType {
	if x != nil {
		return x.Type
	}
	return ProductType_ProductType_None
}

func (x *CreateProductReq) GetExchangeCode() string {
	if x != nil {
		return x.ExchangeCode
	}
	return ""
}

func (x *CreateProductReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CreateProductReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProductReq) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Status_None
}

func (x *CreateProductReq) GetDisplay() Display {
	if x != nil {
		return x.Display
	}
	return Display_Display_None
}

func (x *CreateProductReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CreateProductReq) GetTickUnit() float64 {
	if x != nil {
		return x.TickUnit
	}
	return 0
}

func (x *CreateProductReq) GetMinimumOrder() float64 {
	if x != nil && x.MinimumOrder != nil {
		return *x.MinimumOrder
	}
	return 0
}

func (x *CreateProductReq) GetIconID() string {
	if x != nil && x.IconID != nil {
		return *x.IconID
	}
	return ""
}

type CreateProductRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateProductRes) Reset() {
	*x = CreateProductRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRes) ProtoMessage() {}

func (x *CreateProductRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRes.ProtoReflect.Descriptor instead.
func (*CreateProductRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{10}
}

type ExchangeCodeProductCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExchangeCode string `protobuf:"bytes,1,opt,name=exchangeCode,proto3" json:"exchangeCode,omitempty"`
	ProductCode  string `protobuf:"bytes,2,opt,name=productCode,proto3" json:"productCode,omitempty"`
}

func (x *ExchangeCodeProductCode) Reset() {
	*x = ExchangeCodeProductCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCodeProductCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCodeProductCode) ProtoMessage() {}

func (x *ExchangeCodeProductCode) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCodeProductCode.ProtoReflect.Descriptor instead.
func (*ExchangeCodeProductCode) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{11}
}

func (x *ExchangeCodeProductCode) GetExchangeCode() string {
	if x != nil {
		return x.ExchangeCode
	}
	return ""
}

func (x *ExchangeCodeProductCode) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

type GetProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Product:
	//	*GetProductReq_Id
	//	*GetProductReq_Code
	Product isGetProductReq_Product `protobuf_oneof:"product"`
}

func (x *GetProductReq) Reset() {
	*x = GetProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductReq) ProtoMessage() {}

func (x *GetProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductReq.ProtoReflect.Descriptor instead.
func (*GetProductReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{12}
}

func (m *GetProductReq) GetProduct() isGetProductReq_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (x *GetProductReq) GetId() int32 {
	if x, ok := x.GetProduct().(*GetProductReq_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetProductReq) GetCode() *ExchangeCodeProductCode {
	if x, ok := x.GetProduct().(*GetProductReq_Code); ok {
		return x.Code
	}
	return nil
}

type isGetProductReq_Product interface {
	isGetProductReq_Product()
}

type GetProductReq_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetProductReq_Code struct {
	Code *ExchangeCodeProductCode `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*GetProductReq_Id) isGetProductReq_Product() {}

func (*GetProductReq_Code) isGetProductReq_Product() {}

type GetProductRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *GetProductRes) Reset() {
	*x = GetProductRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRes) ProtoMessage() {}

func (x *GetProductRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRes.ProtoReflect.Descriptor instead.
func (*GetProductRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{13}
}

func (x *GetProductRes) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type GetProductsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductType  []ProductType       `protobuf:"varint,1,rep,packed,name=productType,proto3,enum=product.ProductType" json:"productType,omitempty"`
	ExchangeCode []string            `protobuf:"bytes,2,rep,name=exchangeCode,proto3" json:"exchangeCode,omitempty"`
	Status       *Status             `protobuf:"varint,3,opt,name=status,proto3,enum=product.Status,oneof" json:"status,omitempty"`
	Display      *Display            `protobuf:"varint,4,opt,name=display,proto3,enum=product.Display,oneof" json:"display,omitempty"`
	Pagination   *general.Pagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetProductsReq) Reset() {
	*x = GetProductsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsReq) ProtoMessage() {}

func (x *GetProductsReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsReq.ProtoReflect.Descriptor instead.
func (*GetProductsReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{14}
}

func (x *GetProductsReq) GetProductType() []ProductType {
	if x != nil {
		return x.ProductType
	}
	return nil
}

func (x *GetProductsReq) GetExchangeCode() []string {
	if x != nil {
		return x.ExchangeCode
	}
	return nil
}

func (x *GetProductsReq) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_Status_None
}

func (x *GetProductsReq) GetDisplay() Display {
	if x != nil && x.Display != nil {
		return *x.Display
	}
	return Display_Display_None
}

func (x *GetProductsReq) GetPagination() *general.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetProductsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product        []*Product              `protobuf:"bytes,1,rep,name=product,proto3" json:"product,omitempty"`
	PaginationInfo *general.PaginationInfo `protobuf:"bytes,2,opt,name=paginationInfo,proto3" json:"paginationInfo,omitempty"`
}

func (x *GetProductsRes) Reset() {
	*x = GetProductsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsRes) ProtoMessage() {}

func (x *GetProductsRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsRes.ProtoReflect.Descriptor instead.
func (*GetProductsRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{15}
}

func (x *GetProductsRes) GetProduct() []*Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *GetProductsRes) GetPaginationInfo() *general.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type ModifyProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Product:
	//	*ModifyProductReq_Id
	//	*ModifyProductReq_Code
	Product      isModifyProductReq_Product `protobuf_oneof:"product"`
	Status       *Status                    `protobuf:"varint,3,opt,name=status,proto3,enum=product.Status,oneof" json:"status,omitempty"`
	VerifyStatus *Display                   `protobuf:"varint,4,opt,name=verifyStatus,proto3,enum=product.Display,oneof" json:"verifyStatus,omitempty"`
}

func (x *ModifyProductReq) Reset() {
	*x = ModifyProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyProductReq) ProtoMessage() {}

func (x *ModifyProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyProductReq.ProtoReflect.Descriptor instead.
func (*ModifyProductReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{16}
}

func (m *ModifyProductReq) GetProduct() isModifyProductReq_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (x *ModifyProductReq) GetId() int32 {
	if x, ok := x.GetProduct().(*ModifyProductReq_Id); ok {
		return x.Id
	}
	return 0
}

func (x *ModifyProductReq) GetCode() *ExchangeCodeProductCode {
	if x, ok := x.GetProduct().(*ModifyProductReq_Code); ok {
		return x.Code
	}
	return nil
}

func (x *ModifyProductReq) GetStatus() Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Status_Status_None
}

func (x *ModifyProductReq) GetVerifyStatus() Display {
	if x != nil && x.VerifyStatus != nil {
		return *x.VerifyStatus
	}
	return Display_Display_None
}

type isModifyProductReq_Product interface {
	isModifyProductReq_Product()
}

type ModifyProductReq_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type ModifyProductReq_Code struct {
	Code *ExchangeCodeProductCode `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*ModifyProductReq_Id) isModifyProductReq_Product() {}

func (*ModifyProductReq_Code) isModifyProductReq_Product() {}

type ModifyProductRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModifyProductRes) Reset() {
	*x = ModifyProductRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyProductRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyProductRes) ProtoMessage() {}

func (x *ModifyProductRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyProductRes.ProtoReflect.Descriptor instead.
func (*ModifyProductRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{17}
}

type DeleteProductReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Product:
	//	*DeleteProductReq_Id
	//	*DeleteProductReq_Code
	Product isDeleteProductReq_Product `protobuf_oneof:"product"`
}

func (x *DeleteProductReq) Reset() {
	*x = DeleteProductReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductReq) ProtoMessage() {}

func (x *DeleteProductReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductReq.ProtoReflect.Descriptor instead.
func (*DeleteProductReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{18}
}

func (m *DeleteProductReq) GetProduct() isDeleteProductReq_Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (x *DeleteProductReq) GetId() int32 {
	if x, ok := x.GetProduct().(*DeleteProductReq_Id); ok {
		return x.Id
	}
	return 0
}

func (x *DeleteProductReq) GetCode() *ExchangeCodeProductCode {
	if x, ok := x.GetProduct().(*DeleteProductReq_Code); ok {
		return x.Code
	}
	return nil
}

type isDeleteProductReq_Product interface {
	isDeleteProductReq_Product()
}

type DeleteProductReq_Id struct {
	Id int32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type DeleteProductReq_Code struct {
	Code *ExchangeCodeProductCode `protobuf:"bytes,2,opt,name=code,proto3,oneof"`
}

func (*DeleteProductReq_Id) isDeleteProductReq_Product() {}

func (*DeleteProductReq_Code) isDeleteProductReq_Product() {}

type DeleteProductRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductRes) Reset() {
	*x = DeleteProductRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRes) ProtoMessage() {}

func (x *DeleteProductRes) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRes.ProtoReflect.Descriptor instead.
func (*DeleteProductRes) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{19}
}

var File_product_product_proto protoreflect.FileDescriptor

var file_product_product_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x1a, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x22, 0x3d, 0x0a, 0x13, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x7f, 0x0a, 0x0d, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x22, 0xde, 0x04, 0x0a, 0x08, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61,
	0x79, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x64, 0x61, 0x79, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x79, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x61, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x48, 0x01, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc2, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0c,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xff, 0x02, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x22, 0x5f, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x64, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0x97, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x48, 0x01, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x7d,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3f, 0x0a, 0x0e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xec, 0x01,
	0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0c, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x48, 0x02, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x12, 0x0a, 0x10,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x22, 0x67, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x2a, 0x82, 0x01,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x46, 0x6f, 0x72, 0x65, 0x78, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x10, 0x04, 0x2a, 0x42, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x46, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x32, 0xe9,
	0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2d, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2f, 0x62, 0x65, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_product_proto_rawDescOnce sync.Once
	file_product_product_proto_rawDescData = file_product_product_proto_rawDesc
)

func file_product_product_proto_rawDescGZIP() []byte {
	file_product_product_proto_rawDescOnce.Do(func() {
		file_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_product_proto_rawDescData)
	})
	return file_product_product_proto_rawDescData
}

var file_product_product_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_product_product_proto_goTypes = []interface{}{
	(ProductType)(0),                // 0: product.ProductType
	(Status)(0),                     // 1: product.Status
	(Display)(0),                    // 2: product.Display
	(*ExchangeDay)(nil),             // 3: product.ExchangeDay
	(*ExceptionTimeFormat)(nil),     // 4: product.ExceptionTimeFormat
	(*ExceptionTime)(nil),           // 5: product.ExceptionTime
	(*Exchange)(nil),                // 6: product.Exchange
	(*GetExchangeReq)(nil),          // 7: product.GetExchangeReq
	(*GetExchangeRes)(nil),          // 8: product.GetExchangeRes
	(*GetExchangesReq)(nil),         // 9: product.GetExchangesReq
	(*GetExchangesRes)(nil),         // 10: product.GetExchangesRes
	(*Product)(nil),                 // 11: product.Product
	(*CreateProductReq)(nil),        // 12: product.CreateProductReq
	(*CreateProductRes)(nil),        // 13: product.CreateProductRes
	(*ExchangeCodeProductCode)(nil), // 14: product.ExchangeCodeProductCode
	(*GetProductReq)(nil),           // 15: product.GetProductReq
	(*GetProductRes)(nil),           // 16: product.GetProductRes
	(*GetProductsReq)(nil),          // 17: product.GetProductsReq
	(*GetProductsRes)(nil),          // 18: product.GetProductsRes
	(*ModifyProductReq)(nil),        // 19: product.ModifyProductReq
	(*ModifyProductRes)(nil),        // 20: product.ModifyProductRes
	(*DeleteProductReq)(nil),        // 21: product.DeleteProductReq
	(*DeleteProductRes)(nil),        // 22: product.DeleteProductRes
	(*general.Pagination)(nil),      // 23: general.Pagination
	(*general.PaginationInfo)(nil),  // 24: general.PaginationInfo
}
var file_product_product_proto_depIdxs = []int32{
	4,  // 0: product.ExceptionTime.trade:type_name -> product.ExceptionTimeFormat
	4,  // 1: product.ExceptionTime.stopTrade:type_name -> product.ExceptionTimeFormat
	0,  // 2: product.Exchange.productType:type_name -> product.ProductType
	1,  // 3: product.Exchange.status:type_name -> product.Status
	2,  // 4: product.Exchange.display:type_name -> product.Display
	3,  // 5: product.Exchange.exchangeDay:type_name -> product.ExchangeDay
	5,  // 6: product.Exchange.exceptionTime:type_name -> product.ExceptionTime
	1,  // 7: product.GetExchangeReq.status:type_name -> product.Status
	2,  // 8: product.GetExchangeReq.display:type_name -> product.Display
	6,  // 9: product.GetExchangeRes.exchange:type_name -> product.Exchange
	23, // 10: product.GetExchangesReq.pagination:type_name -> general.Pagination
	6,  // 11: product.GetExchangesRes.exchange:type_name -> product.Exchange
	24, // 12: product.GetExchangesRes.paginationInfo:type_name -> general.PaginationInfo
	0,  // 13: product.Product.type:type_name -> product.ProductType
	1,  // 14: product.Product.status:type_name -> product.Status
	2,  // 15: product.Product.display:type_name -> product.Display
	0,  // 16: product.CreateProductReq.type:type_name -> product.ProductType
	1,  // 17: product.CreateProductReq.status:type_name -> product.Status
	2,  // 18: product.CreateProductReq.display:type_name -> product.Display
	14, // 19: product.GetProductReq.code:type_name -> product.ExchangeCodeProductCode
	11, // 20: product.GetProductRes.product:type_name -> product.Product
	0,  // 21: product.GetProductsReq.productType:type_name -> product.ProductType
	1,  // 22: product.GetProductsReq.status:type_name -> product.Status
	2,  // 23: product.GetProductsReq.display:type_name -> product.Display
	23, // 24: product.GetProductsReq.pagination:type_name -> general.Pagination
	11, // 25: product.GetProductsRes.product:type_name -> product.Product
	24, // 26: product.GetProductsRes.paginationInfo:type_name -> general.PaginationInfo
	14, // 27: product.ModifyProductReq.code:type_name -> product.ExchangeCodeProductCode
	1,  // 28: product.ModifyProductReq.status:type_name -> product.Status
	2,  // 29: product.ModifyProductReq.verifyStatus:type_name -> product.Display
	14, // 30: product.DeleteProductReq.code:type_name -> product.ExchangeCodeProductCode
	7,  // 31: product.ProductService.GetExchange:input_type -> product.GetExchangeReq
	9,  // 32: product.ProductService.GetExchanges:input_type -> product.GetExchangesReq
	12, // 33: product.ProductService.CreateProduct:input_type -> product.CreateProductReq
	15, // 34: product.ProductService.GetProduct:input_type -> product.GetProductReq
	17, // 35: product.ProductService.GetProducts:input_type -> product.GetProductsReq
	19, // 36: product.ProductService.ModifyProduct:input_type -> product.ModifyProductReq
	21, // 37: product.ProductService.DeleteProduct:input_type -> product.DeleteProductReq
	8,  // 38: product.ProductService.GetExchange:output_type -> product.GetExchangeRes
	10, // 39: product.ProductService.GetExchanges:output_type -> product.GetExchangesRes
	13, // 40: product.ProductService.CreateProduct:output_type -> product.CreateProductRes
	16, // 41: product.ProductService.GetProduct:output_type -> product.GetProductRes
	18, // 42: product.ProductService.GetProducts:output_type -> product.GetProductsRes
	20, // 43: product.ProductService.ModifyProduct:output_type -> product.ModifyProductRes
	22, // 44: product.ProductService.DeleteProduct:output_type -> product.DeleteProductRes
	38, // [38:45] is the sub-list for method output_type
	31, // [31:38] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_product_product_proto_init() }
func file_product_product_proto_init() {
	if File_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionTimeFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Exchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExchangesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCodeProductCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyProductRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_product_product_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_product_product_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_product_product_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_product_product_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_product_product_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GetProductReq_Id)(nil),
		(*GetProductReq_Code)(nil),
	}
	file_product_product_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_product_product_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ModifyProductReq_Id)(nil),
		(*ModifyProductReq_Code)(nil),
	}
	file_product_product_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*DeleteProductReq_Id)(nil),
		(*DeleteProductReq_Code)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_product_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_product_proto_goTypes,
		DependencyIndexes: file_product_product_proto_depIdxs,
		EnumInfos:         file_product_product_proto_enumTypes,
		MessageInfos:      file_product_product_proto_msgTypes,
	}.Build()
	File_product_product_proto = out.File
	file_product_product_proto_rawDesc = nil
	file_product_product_proto_goTypes = nil
	file_product_product_proto_depIdxs = nil
}
