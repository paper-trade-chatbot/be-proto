// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: candle/candle.proto

package candle

import (
	general "github.com/paper-trade-chatbot/be-proto/general"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IntervalType int32

const (
	IntervalType_IntervalType_None IntervalType = 0
	IntervalType_IntervalType_1MI  IntervalType = 21
	IntervalType_IntervalType_2MI  IntervalType = 22
	IntervalType_IntervalType_5MI  IntervalType = 25
	IntervalType_IntervalType_10MI IntervalType = 210
	IntervalType_IntervalType_15MI IntervalType = 215
	IntervalType_IntervalType_30MI IntervalType = 230
	IntervalType_IntervalType_1HR  IntervalType = 31
	IntervalType_IntervalType_1DY  IntervalType = 41
	IntervalType_IntervalType_5DY  IntervalType = 45
	IntervalType_IntervalType_1WK  IntervalType = 51
	IntervalType_IntervalType_1MO  IntervalType = 61
	IntervalType_IntervalType_1YR  IntervalType = 71
)

// Enum value maps for IntervalType.
var (
	IntervalType_name = map[int32]string{
		0:   "IntervalType_None",
		21:  "IntervalType_1MI",
		22:  "IntervalType_2MI",
		25:  "IntervalType_5MI",
		210: "IntervalType_10MI",
		215: "IntervalType_15MI",
		230: "IntervalType_30MI",
		31:  "IntervalType_1HR",
		41:  "IntervalType_1DY",
		45:  "IntervalType_5DY",
		51:  "IntervalType_1WK",
		61:  "IntervalType_1MO",
		71:  "IntervalType_1YR",
	}
	IntervalType_value = map[string]int32{
		"IntervalType_None": 0,
		"IntervalType_1MI":  21,
		"IntervalType_2MI":  22,
		"IntervalType_5MI":  25,
		"IntervalType_10MI": 210,
		"IntervalType_15MI": 215,
		"IntervalType_30MI": 230,
		"IntervalType_1HR":  31,
		"IntervalType_1DY":  41,
		"IntervalType_5DY":  45,
		"IntervalType_1WK":  51,
		"IntervalType_1MO":  61,
		"IntervalType_1YR":  71,
	}
)

func (x IntervalType) Enum() *IntervalType {
	p := new(IntervalType)
	*p = x
	return p
}

func (x IntervalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntervalType) Descriptor() protoreflect.EnumDescriptor {
	return file_candle_candle_proto_enumTypes[0].Descriptor()
}

func (IntervalType) Type() protoreflect.EnumType {
	return &file_candle_candle_proto_enumTypes[0]
}

func (x IntervalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntervalType.Descriptor instead.
func (IntervalType) EnumDescriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{0}
}

type GetCandlesReqOrderBy int32

const (
	GetCandlesReqOrderBy_GetCandlesReqOrderBy_None      GetCandlesReqOrderBy = 0
	GetCandlesReqOrderBy_GetCandlesReqOrderBy_Start     GetCandlesReqOrderBy = 1
	GetCandlesReqOrderBy_GetCandlesReqOrderBy_ProductID GetCandlesReqOrderBy = 2
)

// Enum value maps for GetCandlesReqOrderBy.
var (
	GetCandlesReqOrderBy_name = map[int32]string{
		0: "GetCandlesReqOrderBy_None",
		1: "GetCandlesReqOrderBy_Start",
		2: "GetCandlesReqOrderBy_ProductID",
	}
	GetCandlesReqOrderBy_value = map[string]int32{
		"GetCandlesReqOrderBy_None":      0,
		"GetCandlesReqOrderBy_Start":     1,
		"GetCandlesReqOrderBy_ProductID": 2,
	}
)

func (x GetCandlesReqOrderBy) Enum() *GetCandlesReqOrderBy {
	p := new(GetCandlesReqOrderBy)
	*p = x
	return p
}

func (x GetCandlesReqOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCandlesReqOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_candle_candle_proto_enumTypes[1].Descriptor()
}

func (GetCandlesReqOrderBy) Type() protoreflect.EnumType {
	return &file_candle_candle_proto_enumTypes[1]
}

func (x GetCandlesReqOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCandlesReqOrderBy.Descriptor instead.
func (GetCandlesReqOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{1}
}

type GetCandlesReqOrderDirection int32

const (
	GetCandlesReqOrderDirection_GetCandlesReqOrderDirection_None GetCandlesReqOrderDirection = 0
	GetCandlesReqOrderDirection_GetCandlesReqOrderDirection_ASC  GetCandlesReqOrderDirection = 1
	GetCandlesReqOrderDirection_GetCandlesReqOrderDirection_DESC GetCandlesReqOrderDirection = -1
)

// Enum value maps for GetCandlesReqOrderDirection.
var (
	GetCandlesReqOrderDirection_name = map[int32]string{
		0:  "GetCandlesReqOrderDirection_None",
		1:  "GetCandlesReqOrderDirection_ASC",
		-1: "GetCandlesReqOrderDirection_DESC",
	}
	GetCandlesReqOrderDirection_value = map[string]int32{
		"GetCandlesReqOrderDirection_None": 0,
		"GetCandlesReqOrderDirection_ASC":  1,
		"GetCandlesReqOrderDirection_DESC": -1,
	}
)

func (x GetCandlesReqOrderDirection) Enum() *GetCandlesReqOrderDirection {
	p := new(GetCandlesReqOrderDirection)
	*p = x
	return p
}

func (x GetCandlesReqOrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetCandlesReqOrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_candle_candle_proto_enumTypes[2].Descriptor()
}

func (GetCandlesReqOrderDirection) Type() protoreflect.EnumType {
	return &file_candle_candle_proto_enumTypes[2]
}

func (x GetCandlesReqOrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetCandlesReqOrderDirection.Descriptor instead.
func (GetCandlesReqOrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{2}
}

type CandleStick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int64  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Open   string `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	Close  string `protobuf:"bytes,3,opt,name=close,proto3" json:"close,omitempty"`
	High   string `protobuf:"bytes,4,opt,name=high,proto3" json:"high,omitempty"`
	Low    string `protobuf:"bytes,5,opt,name=low,proto3" json:"low,omitempty"`
	Volume string `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *CandleStick) Reset() {
	*x = CandleStick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandleStick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleStick) ProtoMessage() {}

func (x *CandleStick) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleStick.ProtoReflect.Descriptor instead.
func (*CandleStick) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{0}
}

func (x *CandleStick) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *CandleStick) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *CandleStick) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *CandleStick) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *CandleStick) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *CandleStick) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

type CandleChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID    int64          `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	IntervalType IntervalType   `protobuf:"varint,2,opt,name=intervalType,proto3,enum=candle.IntervalType" json:"intervalType,omitempty"`
	CandleSticks []*CandleStick `protobuf:"bytes,3,rep,name=candleSticks,proto3" json:"candleSticks,omitempty"`
}

func (x *CandleChart) Reset() {
	*x = CandleChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandleChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleChart) ProtoMessage() {}

func (x *CandleChart) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleChart.ProtoReflect.Descriptor instead.
func (*CandleChart) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{1}
}

func (x *CandleChart) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *CandleChart) GetIntervalType() IntervalType {
	if x != nil {
		return x.IntervalType
	}
	return IntervalType_IntervalType_None
}

func (x *CandleChart) GetCandleSticks() []*CandleStick {
	if x != nil {
		return x.CandleSticks
	}
	return nil
}

type CreateCandlesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandleCharts []*CandleChart `protobuf:"bytes,1,rep,name=candleCharts,proto3" json:"candleCharts,omitempty"`
}

func (x *CreateCandlesReq) Reset() {
	*x = CreateCandlesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCandlesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCandlesReq) ProtoMessage() {}

func (x *CreateCandlesReq) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCandlesReq.ProtoReflect.Descriptor instead.
func (*CreateCandlesReq) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCandlesReq) GetCandleCharts() []*CandleChart {
	if x != nil {
		return x.CandleCharts
	}
	return nil
}

type CreateCandlesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSuccess int32 `protobuf:"varint,1,opt,name=totalSuccess,proto3" json:"totalSuccess,omitempty"`
}

func (x *CreateCandlesRes) Reset() {
	*x = CreateCandlesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCandlesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCandlesRes) ProtoMessage() {}

func (x *CreateCandlesRes) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCandlesRes.ProtoReflect.Descriptor instead.
func (*CreateCandlesRes) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCandlesRes) GetTotalSuccess() int32 {
	if x != nil {
		return x.TotalSuccess
	}
	return 0
}

type GetCandlesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID      []int64                       `protobuf:"varint,1,rep,packed,name=productID,proto3" json:"productID,omitempty"`
	IntervalType   IntervalType                  `protobuf:"varint,2,opt,name=intervalType,proto3,enum=candle.IntervalType" json:"intervalType,omitempty"`
	StartTime      int64                         `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime        int64                         `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	OrderBy        []GetCandlesReqOrderBy        `protobuf:"varint,5,rep,packed,name=orderBy,proto3,enum=candle.GetCandlesReqOrderBy" json:"orderBy,omitempty"`
	OrderDirection []GetCandlesReqOrderDirection `protobuf:"varint,6,rep,packed,name=orderDirection,proto3,enum=candle.GetCandlesReqOrderDirection" json:"orderDirection,omitempty"`
	Pagination     *general.Pagination           `protobuf:"bytes,7,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetCandlesReq) Reset() {
	*x = GetCandlesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandlesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesReq) ProtoMessage() {}

func (x *GetCandlesReq) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesReq.ProtoReflect.Descriptor instead.
func (*GetCandlesReq) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{4}
}

func (x *GetCandlesReq) GetProductID() []int64 {
	if x != nil {
		return x.ProductID
	}
	return nil
}

func (x *GetCandlesReq) GetIntervalType() IntervalType {
	if x != nil {
		return x.IntervalType
	}
	return IntervalType_IntervalType_None
}

func (x *GetCandlesReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCandlesReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetCandlesReq) GetOrderBy() []GetCandlesReqOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *GetCandlesReq) GetOrderDirection() []GetCandlesReqOrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return nil
}

func (x *GetCandlesReq) GetPagination() *general.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCandlesResElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID    int64        `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	IntervalType IntervalType `protobuf:"varint,2,opt,name=intervalType,proto3,enum=candle.IntervalType" json:"intervalType,omitempty"`
	CandleSticks *CandleStick `protobuf:"bytes,3,opt,name=candleSticks,proto3" json:"candleSticks,omitempty"`
}

func (x *GetCandlesResElement) Reset() {
	*x = GetCandlesResElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandlesResElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesResElement) ProtoMessage() {}

func (x *GetCandlesResElement) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesResElement.ProtoReflect.Descriptor instead.
func (*GetCandlesResElement) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{5}
}

func (x *GetCandlesResElement) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *GetCandlesResElement) GetIntervalType() IntervalType {
	if x != nil {
		return x.IntervalType
	}
	return IntervalType_IntervalType_None
}

func (x *GetCandlesResElement) GetCandleSticks() *CandleStick {
	if x != nil {
		return x.CandleSticks
	}
	return nil
}

type GetCandlesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles        []*GetCandlesResElement `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	PaginationInfo *general.PaginationInfo `protobuf:"bytes,2,opt,name=paginationInfo,proto3" json:"paginationInfo,omitempty"`
}

func (x *GetCandlesRes) Reset() {
	*x = GetCandlesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_candle_candle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCandlesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesRes) ProtoMessage() {}

func (x *GetCandlesRes) ProtoReflect() protoreflect.Message {
	mi := &file_candle_candle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesRes.ProtoReflect.Descriptor instead.
func (*GetCandlesRes) Descriptor() ([]byte, []int) {
	return file_candle_candle_proto_rawDescGZIP(), []int{6}
}

func (x *GetCandlesRes) GetCandles() []*GetCandlesResElement {
	if x != nil {
		return x.Candles
	}
	return nil
}

func (x *GetCandlesRes) GetPaginationInfo() *general.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

var File_candle_candle_proto protoreflect.FileDescriptor

var file_candle_candle_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2f, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x1a, 0x15, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x38, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x74, 0x69, 0x63, 0x6b, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x22, 0x4b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x74, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73,
	0x22, 0x36, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53,
	0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0xb3, 0x02, 0x0a, 0x0c, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x31, 0x4d, 0x49, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x32, 0x4d, 0x49, 0x10, 0x16, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x35, 0x4d,
	0x49, 0x10, 0x19, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x31, 0x30, 0x4d, 0x49, 0x10, 0xd2, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x31, 0x35, 0x4d, 0x49,
	0x10, 0xd7, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x33, 0x30, 0x4d, 0x49, 0x10, 0xe6, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x31, 0x48, 0x52, 0x10,
	0x1f, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x31, 0x44, 0x59, 0x10, 0x29, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x35, 0x44, 0x59, 0x10, 0x2d, 0x12, 0x14, 0x0a,
	0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x31, 0x57,
	0x4b, 0x10, 0x33, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x31, 0x4d, 0x4f, 0x10, 0x3d, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x31, 0x59, 0x52, 0x10, 0x47, 0x2a,
	0x79, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x5f,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x5f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x5f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x97, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x23, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x32, 0x90, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x63, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2d, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2f, 0x62, 0x65, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_candle_candle_proto_rawDescOnce sync.Once
	file_candle_candle_proto_rawDescData = file_candle_candle_proto_rawDesc
)

func file_candle_candle_proto_rawDescGZIP() []byte {
	file_candle_candle_proto_rawDescOnce.Do(func() {
		file_candle_candle_proto_rawDescData = protoimpl.X.CompressGZIP(file_candle_candle_proto_rawDescData)
	})
	return file_candle_candle_proto_rawDescData
}

var file_candle_candle_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_candle_candle_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_candle_candle_proto_goTypes = []interface{}{
	(IntervalType)(0),                // 0: candle.IntervalType
	(GetCandlesReqOrderBy)(0),        // 1: candle.GetCandlesReqOrderBy
	(GetCandlesReqOrderDirection)(0), // 2: candle.GetCandlesReqOrderDirection
	(*CandleStick)(nil),              // 3: candle.CandleStick
	(*CandleChart)(nil),              // 4: candle.CandleChart
	(*CreateCandlesReq)(nil),         // 5: candle.CreateCandlesReq
	(*CreateCandlesRes)(nil),         // 6: candle.CreateCandlesRes
	(*GetCandlesReq)(nil),            // 7: candle.GetCandlesReq
	(*GetCandlesResElement)(nil),     // 8: candle.GetCandlesResElement
	(*GetCandlesRes)(nil),            // 9: candle.GetCandlesRes
	(*general.Pagination)(nil),       // 10: general.Pagination
	(*general.PaginationInfo)(nil),   // 11: general.PaginationInfo
}
var file_candle_candle_proto_depIdxs = []int32{
	0,  // 0: candle.CandleChart.intervalType:type_name -> candle.IntervalType
	3,  // 1: candle.CandleChart.candleSticks:type_name -> candle.CandleStick
	4,  // 2: candle.CreateCandlesReq.candleCharts:type_name -> candle.CandleChart
	0,  // 3: candle.GetCandlesReq.intervalType:type_name -> candle.IntervalType
	1,  // 4: candle.GetCandlesReq.orderBy:type_name -> candle.GetCandlesReqOrderBy
	2,  // 5: candle.GetCandlesReq.orderDirection:type_name -> candle.GetCandlesReqOrderDirection
	10, // 6: candle.GetCandlesReq.pagination:type_name -> general.Pagination
	0,  // 7: candle.GetCandlesResElement.intervalType:type_name -> candle.IntervalType
	3,  // 8: candle.GetCandlesResElement.candleSticks:type_name -> candle.CandleStick
	8,  // 9: candle.GetCandlesRes.candles:type_name -> candle.GetCandlesResElement
	11, // 10: candle.GetCandlesRes.paginationInfo:type_name -> general.PaginationInfo
	5,  // 11: candle.CandleService.CreateCandles:input_type -> candle.CreateCandlesReq
	7,  // 12: candle.CandleService.GetCandles:input_type -> candle.GetCandlesReq
	6,  // 13: candle.CandleService.CreateCandles:output_type -> candle.CreateCandlesRes
	9,  // 14: candle.CandleService.GetCandles:output_type -> candle.GetCandlesRes
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_candle_candle_proto_init() }
func file_candle_candle_proto_init() {
	if File_candle_candle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_candle_candle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandleStick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandleChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCandlesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCandlesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandlesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandlesResElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_candle_candle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCandlesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_candle_candle_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_candle_candle_proto_goTypes,
		DependencyIndexes: file_candle_candle_proto_depIdxs,
		EnumInfos:         file_candle_candle_proto_enumTypes,
		MessageInfos:      file_candle_candle_proto_msgTypes,
	}.Build()
	File_candle_candle_proto = out.File
	file_candle_candle_proto_rawDesc = nil
	file_candle_candle_proto_goTypes = nil
	file_candle_candle_proto_depIdxs = nil
}
