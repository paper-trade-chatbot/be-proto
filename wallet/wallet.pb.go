// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: wallet/wallet.proto

package wallet

import (
	general "github.com/paper-trade-chatbot/be-proto/general"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_Action_NONE     Action = 0
	Action_Action_DEPOSIT  Action = 1 // 入金
	Action_Action_WITHDRAW Action = 2 // 出金
	Action_Action_BONUS    Action = 3 // 贈送
	Action_Action_INTEREST Action = 4 // 利息
	Action_Action_OPEN     Action = 5 // 開倉
	Action_Action_CLOSE    Action = 6 // 平倉
	Action_Action_MANUALLY Action = 7 // 人工更改
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "Action_NONE",
		1: "Action_DEPOSIT",
		2: "Action_WITHDRAW",
		3: "Action_BONUS",
		4: "Action_INTEREST",
		5: "Action_OPEN",
		6: "Action_CLOSE",
		7: "Action_MANUALLY",
	}
	Action_value = map[string]int32{
		"Action_NONE":     0,
		"Action_DEPOSIT":  1,
		"Action_WITHDRAW": 2,
		"Action_BONUS":    3,
		"Action_INTEREST": 4,
		"Action_OPEN":     5,
		"Action_CLOSE":    6,
		"Action_MANUALLY": 7,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_wallet_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_wallet_wallet_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_Status_NONE     Status = 0
	Status_Status_PENDING  Status = 1 // 待辦
	Status_Status_SUCCESS  Status = 2 // 成功
	Status_Status_FAILED   Status = 3 // 失敗
	Status_Status_ROLLBACK Status = 4 // 回滾
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Status_NONE",
		1: "Status_PENDING",
		2: "Status_SUCCESS",
		3: "Status_FAILED",
		4: "Status_ROLLBACK",
	}
	Status_value = map[string]int32{
		"Status_NONE":     0,
		"Status_PENDING":  1,
		"Status_SUCCESS":  2,
		"Status_FAILED":   3,
		"Status_ROLLBACK": 4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_wallet_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_wallet_wallet_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

type GetTransactionRecordsReq_OrderBy int32

const (
	GetTransactionRecordsReq_OrderBy_None        GetTransactionRecordsReq_OrderBy = 0
	GetTransactionRecordsReq_OrderBy_MemberID    GetTransactionRecordsReq_OrderBy = 1
	GetTransactionRecordsReq_OrderBy_CommitterID GetTransactionRecordsReq_OrderBy = 2
	GetTransactionRecordsReq_OrderBy_Currency    GetTransactionRecordsReq_OrderBy = 3
	GetTransactionRecordsReq_OrderBy_CreatedAt   GetTransactionRecordsReq_OrderBy = 4
)

// Enum value maps for GetTransactionRecordsReq_OrderBy.
var (
	GetTransactionRecordsReq_OrderBy_name = map[int32]string{
		0: "OrderBy_None",
		1: "OrderBy_MemberID",
		2: "OrderBy_CommitterID",
		3: "OrderBy_Currency",
		4: "OrderBy_CreatedAt",
	}
	GetTransactionRecordsReq_OrderBy_value = map[string]int32{
		"OrderBy_None":        0,
		"OrderBy_MemberID":    1,
		"OrderBy_CommitterID": 2,
		"OrderBy_Currency":    3,
		"OrderBy_CreatedAt":   4,
	}
)

func (x GetTransactionRecordsReq_OrderBy) Enum() *GetTransactionRecordsReq_OrderBy {
	p := new(GetTransactionRecordsReq_OrderBy)
	*p = x
	return p
}

func (x GetTransactionRecordsReq_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTransactionRecordsReq_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_wallet_proto_enumTypes[2].Descriptor()
}

func (GetTransactionRecordsReq_OrderBy) Type() protoreflect.EnumType {
	return &file_wallet_wallet_proto_enumTypes[2]
}

func (x GetTransactionRecordsReq_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTransactionRecordsReq_OrderBy.Descriptor instead.
func (GetTransactionRecordsReq_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{14, 0}
}

type GetTransactionRecordsReq_OrderDirection int32

const (
	GetTransactionRecordsReq_OrderDirection_None GetTransactionRecordsReq_OrderDirection = 0
	GetTransactionRecordsReq_OrderDirection_ASC  GetTransactionRecordsReq_OrderDirection = 1
	GetTransactionRecordsReq_OrderDirection_DESC GetTransactionRecordsReq_OrderDirection = -1
)

// Enum value maps for GetTransactionRecordsReq_OrderDirection.
var (
	GetTransactionRecordsReq_OrderDirection_name = map[int32]string{
		0:  "OrderDirection_None",
		1:  "OrderDirection_ASC",
		-1: "OrderDirection_DESC",
	}
	GetTransactionRecordsReq_OrderDirection_value = map[string]int32{
		"OrderDirection_None": 0,
		"OrderDirection_ASC":  1,
		"OrderDirection_DESC": -1,
	}
)

func (x GetTransactionRecordsReq_OrderDirection) Enum() *GetTransactionRecordsReq_OrderDirection {
	p := new(GetTransactionRecordsReq_OrderDirection)
	*p = x
	return p
}

func (x GetTransactionRecordsReq_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTransactionRecordsReq_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_wallet_proto_enumTypes[3].Descriptor()
}

func (GetTransactionRecordsReq_OrderDirection) Type() protoreflect.EnumType {
	return &file_wallet_wallet_proto_enumTypes[3]
}

func (x GetTransactionRecordsReq_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTransactionRecordsReq_OrderDirection.Descriptor instead.
func (GetTransactionRecordsReq_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{14, 1}
}

type CreateWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID uint64 `protobuf:"varint,1,opt,name=memberID,proto3" json:"memberID,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *CreateWalletReq) Reset() {
	*x = CreateWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletReq) ProtoMessage() {}

func (x *CreateWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletReq.ProtoReflect.Descriptor instead.
func (*CreateWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWalletReq) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *CreateWalletReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type CreateWalletRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID uint64 `protobuf:"varint,1,opt,name=walletID,proto3" json:"walletID,omitempty"`
}

func (x *CreateWalletRes) Reset() {
	*x = CreateWalletRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRes) ProtoMessage() {}

func (x *CreateWalletRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRes.ProtoReflect.Descriptor instead.
func (*CreateWalletRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWalletRes) GetWalletID() uint64 {
	if x != nil {
		return x.WalletID
	}
	return 0
}

type GetWalletsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Wallet:
	//	*GetWalletsReq_Id
	//	*GetWalletsReq_MemberID
	Wallet   isGetWalletsReq_Wallet `protobuf_oneof:"wallet"`
	Currency *string                `protobuf:"bytes,3,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
}

func (x *GetWalletsReq) Reset() {
	*x = GetWalletsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsReq) ProtoMessage() {}

func (x *GetWalletsReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsReq.ProtoReflect.Descriptor instead.
func (*GetWalletsReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

func (m *GetWalletsReq) GetWallet() isGetWalletsReq_Wallet {
	if m != nil {
		return m.Wallet
	}
	return nil
}

func (x *GetWalletsReq) GetId() uint64 {
	if x, ok := x.GetWallet().(*GetWalletsReq_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetWalletsReq) GetMemberID() uint64 {
	if x, ok := x.GetWallet().(*GetWalletsReq_MemberID); ok {
		return x.MemberID
	}
	return 0
}

func (x *GetWalletsReq) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

type isGetWalletsReq_Wallet interface {
	isGetWalletsReq_Wallet()
}

type GetWalletsReq_Id struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetWalletsReq_MemberID struct {
	MemberID uint64 `protobuf:"varint,2,opt,name=memberID,proto3,oneof"`
}

func (*GetWalletsReq_Id) isGetWalletsReq_Wallet() {}

func (*GetWalletsReq_MemberID) isGetWalletsReq_Wallet() {}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberID  uint64 `protobuf:"varint,2,opt,name=memberID,proto3" json:"memberID,omitempty"`
	Amount    string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency  string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *Wallet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Wallet) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *Wallet) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Wallet) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Wallet) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetWalletsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *GetWalletsRes) Reset() {
	*x = GetWalletsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsRes) ProtoMessage() {}

func (x *GetWalletsRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsRes.ProtoReflect.Descriptor instead.
func (*GetWalletsRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *GetWalletsRes) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type DeleteWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWalletReq) Reset() {
	*x = DeleteWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWalletReq) ProtoMessage() {}

func (x *DeleteWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWalletReq.ProtoReflect.Descriptor instead.
func (*DeleteWalletReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteWalletReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWalletRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteWalletRes) Reset() {
	*x = DeleteWalletRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWalletRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWalletRes) ProtoMessage() {}

func (x *DeleteWalletRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWalletRes.ProtoReflect.Descriptor instead.
func (*DeleteWalletRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{6}
}

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID    uint64 `protobuf:"varint,1,opt,name=walletID,proto3" json:"walletID,omitempty"`
	Action      Action `protobuf:"varint,2,opt,name=action,proto3,enum=wallet.Action" json:"action,omitempty"`
	Amount      string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency    string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	CommitterID uint64 `protobuf:"varint,5,opt,name=committerID,proto3" json:"committerID,omitempty"`
	Remark      string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionReq) GetWalletID() uint64 {
	if x != nil {
		return x.WalletID
	}
	return 0
}

func (x *TransactionReq) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_Action_NONE
}

func (x *TransactionReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionReq) GetCommitterID() uint64 {
	if x != nil {
		return x.CommitterID
	}
	return 0
}

func (x *TransactionReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type TransactionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BeforeAmount string `protobuf:"bytes,2,opt,name=beforeAmount,proto3" json:"beforeAmount,omitempty"`
	AfterAmount  string `protobuf:"bytes,3,opt,name=afterAmount,proto3" json:"afterAmount,omitempty"`
	Currency     string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Status       Status `protobuf:"varint,5,opt,name=status,proto3,enum=wallet.Status" json:"status,omitempty"`
	CreatedAt    int64  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt    int64  `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TransactionRes) Reset() {
	*x = TransactionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRes) ProtoMessage() {}

func (x *TransactionRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRes.ProtoReflect.Descriptor instead.
func (*TransactionRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionRes) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionRes) GetBeforeAmount() string {
	if x != nil {
		return x.BeforeAmount
	}
	return ""
}

func (x *TransactionRes) GetAfterAmount() string {
	if x != nil {
		return x.AfterAmount
	}
	return ""
}

func (x *TransactionRes) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionRes) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Status_NONE
}

func (x *TransactionRes) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransactionRes) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type RollbackTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RollbackerID uint64  `protobuf:"varint,2,opt,name=rollbackerID,proto3" json:"rollbackerID,omitempty"`
	Remark       *string `protobuf:"bytes,3,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *RollbackTransactionReq) Reset() {
	*x = RollbackTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionReq) ProtoMessage() {}

func (x *RollbackTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionReq.ProtoReflect.Descriptor instead.
func (*RollbackTransactionReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *RollbackTransactionReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RollbackTransactionReq) GetRollbackerID() uint64 {
	if x != nil {
		return x.RollbackerID
	}
	return 0
}

func (x *RollbackTransactionReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type RollbackTransactionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollbackTransactionRes) Reset() {
	*x = RollbackTransactionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackTransactionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackTransactionRes) ProtoMessage() {}

func (x *RollbackTransactionRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackTransactionRes.ProtoReflect.Descriptor instead.
func (*RollbackTransactionRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{10}
}

type GetTransactionRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTransactionRecordReq) Reset() {
	*x = GetTransactionRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRecordReq) ProtoMessage() {}

func (x *GetTransactionRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRecordReq.ProtoReflect.Descriptor instead.
func (*GetTransactionRecordReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionRecordReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TransactionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberID             uint64 `protobuf:"varint,2,opt,name=memberID,proto3" json:"memberID,omitempty"`
	WalletID             uint64 `protobuf:"varint,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	Action               Action `protobuf:"varint,4,opt,name=action,proto3,enum=wallet.Action" json:"action,omitempty"`
	Amount               string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	BeforeAmount         string `protobuf:"bytes,6,opt,name=beforeAmount,proto3" json:"beforeAmount,omitempty"`
	AfterAmount          string `protobuf:"bytes,7,opt,name=afterAmount,proto3" json:"afterAmount,omitempty"`
	Currency             string `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	CommitterID          uint64 `protobuf:"varint,9,opt,name=committerID,proto3" json:"committerID,omitempty"`
	Status               Status `protobuf:"varint,10,opt,name=status,proto3,enum=wallet.Status" json:"status,omitempty"`
	Remark               string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt            int64  `protobuf:"varint,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            int64  `protobuf:"varint,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	RollbackBeforeAmount string `protobuf:"bytes,14,opt,name=rollbackBeforeAmount,proto3" json:"rollbackBeforeAmount,omitempty"`
	RollbackAfterAmount  string `protobuf:"bytes,15,opt,name=rollbackAfterAmount,proto3" json:"rollbackAfterAmount,omitempty"`
	RollbackerID         uint64 `protobuf:"varint,16,opt,name=rollbackerID,proto3" json:"rollbackerID,omitempty"`
	RollbackAt           int64  `protobuf:"varint,17,opt,name=rollbackAt,proto3" json:"rollbackAt,omitempty"`
}

func (x *TransactionRecord) Reset() {
	*x = TransactionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRecord) ProtoMessage() {}

func (x *TransactionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRecord.ProtoReflect.Descriptor instead.
func (*TransactionRecord) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *TransactionRecord) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionRecord) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *TransactionRecord) GetWalletID() uint64 {
	if x != nil {
		return x.WalletID
	}
	return 0
}

func (x *TransactionRecord) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_Action_NONE
}

func (x *TransactionRecord) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionRecord) GetBeforeAmount() string {
	if x != nil {
		return x.BeforeAmount
	}
	return ""
}

func (x *TransactionRecord) GetAfterAmount() string {
	if x != nil {
		return x.AfterAmount
	}
	return ""
}

func (x *TransactionRecord) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TransactionRecord) GetCommitterID() uint64 {
	if x != nil {
		return x.CommitterID
	}
	return 0
}

func (x *TransactionRecord) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Status_NONE
}

func (x *TransactionRecord) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TransactionRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransactionRecord) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TransactionRecord) GetRollbackBeforeAmount() string {
	if x != nil {
		return x.RollbackBeforeAmount
	}
	return ""
}

func (x *TransactionRecord) GetRollbackAfterAmount() string {
	if x != nil {
		return x.RollbackAfterAmount
	}
	return ""
}

func (x *TransactionRecord) GetRollbackerID() uint64 {
	if x != nil {
		return x.RollbackerID
	}
	return 0
}

func (x *TransactionRecord) GetRollbackAt() int64 {
	if x != nil {
		return x.RollbackAt
	}
	return 0
}

type GetTransactionRecordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *TransactionRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *GetTransactionRecordRes) Reset() {
	*x = GetTransactionRecordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRecordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRecordRes) ProtoMessage() {}

func (x *GetTransactionRecordRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRecordRes.ProtoReflect.Descriptor instead.
func (*GetTransactionRecordRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *GetTransactionRecordRes) GetRecord() *TransactionRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

type GetTransactionRecordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberID     *uint64                           `protobuf:"varint,1,opt,name=memberID,proto3,oneof" json:"memberID,omitempty"`
	CommitterID  *uint64                           `protobuf:"varint,2,opt,name=committerID,proto3,oneof" json:"committerID,omitempty"`
	RollbackerID *uint64                           `protobuf:"varint,3,opt,name=rollbackerID,proto3,oneof" json:"rollbackerID,omitempty"`
	Currency     []string                          `protobuf:"bytes,4,rep,name=currency,proto3" json:"currency,omitempty"`
	Status       []Status                          `protobuf:"varint,5,rep,packed,name=status,proto3,enum=wallet.Status" json:"status,omitempty"`
	Action       []Action                          `protobuf:"varint,6,rep,packed,name=action,proto3,enum=wallet.Action" json:"action,omitempty"`
	CreatedFrom  *int64                            `protobuf:"varint,7,opt,name=createdFrom,proto3,oneof" json:"createdFrom,omitempty"`
	CreatedTo    *int64                            `protobuf:"varint,8,opt,name=createdTo,proto3,oneof" json:"createdTo,omitempty"`
	Order        []*GetTransactionRecordsReq_Order `protobuf:"bytes,9,rep,name=order,proto3" json:"order,omitempty"`
	Pagination   *general.Pagination               `protobuf:"bytes,10,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetTransactionRecordsReq) Reset() {
	*x = GetTransactionRecordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRecordsReq) ProtoMessage() {}

func (x *GetTransactionRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRecordsReq.ProtoReflect.Descriptor instead.
func (*GetTransactionRecordsReq) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *GetTransactionRecordsReq) GetMemberID() uint64 {
	if x != nil && x.MemberID != nil {
		return *x.MemberID
	}
	return 0
}

func (x *GetTransactionRecordsReq) GetCommitterID() uint64 {
	if x != nil && x.CommitterID != nil {
		return *x.CommitterID
	}
	return 0
}

func (x *GetTransactionRecordsReq) GetRollbackerID() uint64 {
	if x != nil && x.RollbackerID != nil {
		return *x.RollbackerID
	}
	return 0
}

func (x *GetTransactionRecordsReq) GetCurrency() []string {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *GetTransactionRecordsReq) GetStatus() []Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetTransactionRecordsReq) GetAction() []Action {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *GetTransactionRecordsReq) GetCreatedFrom() int64 {
	if x != nil && x.CreatedFrom != nil {
		return *x.CreatedFrom
	}
	return 0
}

func (x *GetTransactionRecordsReq) GetCreatedTo() int64 {
	if x != nil && x.CreatedTo != nil {
		return *x.CreatedTo
	}
	return 0
}

func (x *GetTransactionRecordsReq) GetOrder() []*GetTransactionRecordsReq_Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *GetTransactionRecordsReq) GetPagination() *general.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTransactionRecordsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records        []*TransactionRecord    `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	PaginationInfo *general.PaginationInfo `protobuf:"bytes,2,opt,name=paginationInfo,proto3" json:"paginationInfo,omitempty"`
}

func (x *GetTransactionRecordsRes) Reset() {
	*x = GetTransactionRecordsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRecordsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRecordsRes) ProtoMessage() {}

func (x *GetTransactionRecordsRes) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRecordsRes.ProtoReflect.Descriptor instead.
func (*GetTransactionRecordsRes) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *GetTransactionRecordsRes) GetRecords() []*TransactionRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *GetTransactionRecordsRes) GetPaginationInfo() *general.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

type GetTransactionRecordsReq_Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderBy        GetTransactionRecordsReq_OrderBy        `protobuf:"varint,1,opt,name=orderBy,proto3,enum=wallet.GetTransactionRecordsReq_OrderBy" json:"orderBy,omitempty"`
	OrderDirection GetTransactionRecordsReq_OrderDirection `protobuf:"varint,2,opt,name=orderDirection,proto3,enum=wallet.GetTransactionRecordsReq_OrderDirection" json:"orderDirection,omitempty"`
}

func (x *GetTransactionRecordsReq_Order) Reset() {
	*x = GetTransactionRecordsReq_Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_wallet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRecordsReq_Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRecordsReq_Order) ProtoMessage() {}

func (x *GetTransactionRecordsReq_Order) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_wallet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRecordsReq_Order.ProtoReflect.Descriptor instead.
func (*GetTransactionRecordsReq_Order) Descriptor() ([]byte, []int) {
	return file_wallet_wallet_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GetTransactionRecordsReq_Order) GetOrderBy() GetTransactionRecordsReq_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return GetTransactionRecordsReq_OrderBy_None
}

func (x *GetTransactionRecordsReq_Order) GetOrderDirection() GetTransactionRecordsReq_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return GetTransactionRecordsReq_OrderDirection_None
}

var File_wallet_wallet_proto protoreflect.FileDescriptor

var file_wallet_wallet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x15, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22,
	0x2d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x22, 0x77,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1f, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x39,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x28, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22,
	0xc2, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x74, 0x0a,
	0x16, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x29, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc5, 0x04, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74,
	0x22, 0x4c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x85,
	0x07, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x0c, 0x72, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x42, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x57, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x5f, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x5f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x03, 0x12, 0x15,
	0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x10, 0x04, 0x22, 0x63, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0xa1, 0x01, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x4f, 0x50, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x07, 0x2a, 0x69, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x4f,
	0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x04, 0x32, 0xaa, 0x04, 0x0a, 0x0d, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2d,
	0x63, 0x68, 0x61, 0x74, 0x62, 0x6f, 0x74, 0x2f, 0x62, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wallet_wallet_proto_rawDescOnce sync.Once
	file_wallet_wallet_proto_rawDescData = file_wallet_wallet_proto_rawDesc
)

func file_wallet_wallet_proto_rawDescGZIP() []byte {
	file_wallet_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_wallet_wallet_proto_rawDescData)
	})
	return file_wallet_wallet_proto_rawDescData
}

var file_wallet_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_wallet_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_wallet_wallet_proto_goTypes = []interface{}{
	(Action)(0),                           // 0: wallet.Action
	(Status)(0),                           // 1: wallet.Status
	(GetTransactionRecordsReq_OrderBy)(0), // 2: wallet.GetTransactionRecordsReq.OrderBy
	(GetTransactionRecordsReq_OrderDirection)(0), // 3: wallet.GetTransactionRecordsReq.OrderDirection
	(*CreateWalletReq)(nil),                      // 4: wallet.CreateWalletReq
	(*CreateWalletRes)(nil),                      // 5: wallet.CreateWalletRes
	(*GetWalletsReq)(nil),                        // 6: wallet.GetWalletsReq
	(*Wallet)(nil),                               // 7: wallet.Wallet
	(*GetWalletsRes)(nil),                        // 8: wallet.GetWalletsRes
	(*DeleteWalletReq)(nil),                      // 9: wallet.DeleteWalletReq
	(*DeleteWalletRes)(nil),                      // 10: wallet.DeleteWalletRes
	(*TransactionReq)(nil),                       // 11: wallet.TransactionReq
	(*TransactionRes)(nil),                       // 12: wallet.TransactionRes
	(*RollbackTransactionReq)(nil),               // 13: wallet.RollbackTransactionReq
	(*RollbackTransactionRes)(nil),               // 14: wallet.RollbackTransactionRes
	(*GetTransactionRecordReq)(nil),              // 15: wallet.GetTransactionRecordReq
	(*TransactionRecord)(nil),                    // 16: wallet.TransactionRecord
	(*GetTransactionRecordRes)(nil),              // 17: wallet.GetTransactionRecordRes
	(*GetTransactionRecordsReq)(nil),             // 18: wallet.GetTransactionRecordsReq
	(*GetTransactionRecordsRes)(nil),             // 19: wallet.GetTransactionRecordsRes
	(*GetTransactionRecordsReq_Order)(nil),       // 20: wallet.GetTransactionRecordsReq.Order
	(*general.Pagination)(nil),                   // 21: general.Pagination
	(*general.PaginationInfo)(nil),               // 22: general.PaginationInfo
}
var file_wallet_wallet_proto_depIdxs = []int32{
	7,  // 0: wallet.GetWalletsRes.wallets:type_name -> wallet.Wallet
	0,  // 1: wallet.TransactionReq.action:type_name -> wallet.Action
	1,  // 2: wallet.TransactionRes.status:type_name -> wallet.Status
	0,  // 3: wallet.TransactionRecord.action:type_name -> wallet.Action
	1,  // 4: wallet.TransactionRecord.status:type_name -> wallet.Status
	16, // 5: wallet.GetTransactionRecordRes.record:type_name -> wallet.TransactionRecord
	1,  // 6: wallet.GetTransactionRecordsReq.status:type_name -> wallet.Status
	0,  // 7: wallet.GetTransactionRecordsReq.action:type_name -> wallet.Action
	20, // 8: wallet.GetTransactionRecordsReq.order:type_name -> wallet.GetTransactionRecordsReq.Order
	21, // 9: wallet.GetTransactionRecordsReq.pagination:type_name -> general.Pagination
	16, // 10: wallet.GetTransactionRecordsRes.records:type_name -> wallet.TransactionRecord
	22, // 11: wallet.GetTransactionRecordsRes.paginationInfo:type_name -> general.PaginationInfo
	2,  // 12: wallet.GetTransactionRecordsReq.Order.orderBy:type_name -> wallet.GetTransactionRecordsReq.OrderBy
	3,  // 13: wallet.GetTransactionRecordsReq.Order.orderDirection:type_name -> wallet.GetTransactionRecordsReq.OrderDirection
	4,  // 14: wallet.WalletService.CreateWallet:input_type -> wallet.CreateWalletReq
	6,  // 15: wallet.WalletService.GetWallets:input_type -> wallet.GetWalletsReq
	9,  // 16: wallet.WalletService.DeleteWallet:input_type -> wallet.DeleteWalletReq
	11, // 17: wallet.WalletService.Transaction:input_type -> wallet.TransactionReq
	13, // 18: wallet.WalletService.RollbackTransaction:input_type -> wallet.RollbackTransactionReq
	15, // 19: wallet.WalletService.GetTransactionRecord:input_type -> wallet.GetTransactionRecordReq
	18, // 20: wallet.WalletService.GetTransactionRecords:input_type -> wallet.GetTransactionRecordsReq
	5,  // 21: wallet.WalletService.CreateWallet:output_type -> wallet.CreateWalletRes
	8,  // 22: wallet.WalletService.GetWallets:output_type -> wallet.GetWalletsRes
	10, // 23: wallet.WalletService.DeleteWallet:output_type -> wallet.DeleteWalletRes
	12, // 24: wallet.WalletService.Transaction:output_type -> wallet.TransactionRes
	14, // 25: wallet.WalletService.RollbackTransaction:output_type -> wallet.RollbackTransactionRes
	17, // 26: wallet.WalletService.GetTransactionRecord:output_type -> wallet.GetTransactionRecordRes
	19, // 27: wallet.WalletService.GetTransactionRecords:output_type -> wallet.GetTransactionRecordsRes
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_wallet_wallet_proto_init() }
func file_wallet_wallet_proto_init() {
	if File_wallet_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wallet_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWalletRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollbackTransactionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRecordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRecordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRecordsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_wallet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRecordsReq_Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_wallet_wallet_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GetWalletsReq_Id)(nil),
		(*GetWalletsReq_MemberID)(nil),
	}
	file_wallet_wallet_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_wallet_wallet_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wallet_wallet_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_wallet_proto_depIdxs,
		EnumInfos:         file_wallet_wallet_proto_enumTypes,
		MessageInfos:      file_wallet_wallet_proto_msgTypes,
	}.Build()
	File_wallet_wallet_proto = out.File
	file_wallet_wallet_proto_rawDesc = nil
	file_wallet_wallet_proto_goTypes = nil
	file_wallet_wallet_proto_depIdxs = nil
}
