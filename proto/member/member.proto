syntax = "proto3";
option go_package = "github.com/paper-trade-chatbot/be-proto/member";
package member;
import "general/general.proto";

enum StatusType {
    StatusType_None = 0;
    StatusType_Enabled = 1;
    StatusType_Suppressed = 2;
    StatusType_Freezed = 3;
    StatusType_Disabled = 4;
    StatusType_Discard = 5;
    StatusType_Derived = 6;
}

enum VerifyStatus {
    VerifyStatus_None = 0;
    VerifyStatus_Unverified = 1;
    VerifyStatus_Pending = 2;
    VerifyStatus_Verified = 3;
    VerifyStatus_Failed = 4;
}

enum VerifyType {
    VerifyType_Phone = 0; 
    VerifyType_Mail = 1;
}

message Member {
    string account = 1;
    string mail = 2;
    string lineID = 3;
    string countryCode = 4;
    string phone = 5;
    int64 groupID = 6;
    StatusType status = 7;
    VerifyStatus verifyStatus = 8;
    int64 createdAtUnix = 10;
    int64 loginAtUnix = 11;
}

message CreateMemberReq {
    string account = 1;
    string password = 2;
    string mail = 3;
    string lineID = 4;
    StatusType status = 5;
    VerifyStatus verifyStatus = 6;
    int64 groupID = 7;
    int64 createdAtUnix = 8;
}

message CreateMemberRes {}

message GetMemberReq {
    oneof member {
        int32 id = 1;
        string account = 2;
        string mail = 3;
        string lineID = 4;
    }
}

message GetMemberRes {
    Member member = 1;
}

message GetMembersReq {
    general.Pagination pagination = 1;
}

message GetMembersRes {
    repeated Member member = 1;
    general.PaginationInfo paginationInfo = 2;
}

message ModifyMemberReq {
    oneof member {
        int32 id = 1;
        string account = 2;
        string mail = 3;
        string lineID = 4;
    }
    optional StatusType status = 5;
    optional VerifyStatus verifyStatus = 6;
}

message ModifyMemberRes {}

message ResetPasswordReq {
    string newPassword = 1;
    VerifyType verifyType = 2;
    string countryCode = 3;
    string phone = 4;
    string email = 5; 
}

message ResetPasswordRes {
    bool success = 1;
}

message DeleteMemberReq {
    oneof member {
        int32 id = 1;
        string account = 2;
        string mail = 3;
        string lineID = 4;
    }
}

message DeleteMemberRes {}

message CreateMemberGroupReq {
    string name = 1;
}

message CreateMemberGroupRes {}

message GetMemberGroupsReq {
    optional uint64 id = 1;
    optional string name = 2;
}

message MemberGroup {
    uint64 id = 1;
    string name = 2;
    string memo = 3;
    int64 createdAt = 4;
}

message GetMemberGroupsRes {
    repeated MemberGroup memberGroups = 1;
}

message DeleteMemberGroupReq {
    oneof memberGroup {
        uint64 id = 1;
        string name = 2;
    }
}

message DeleteMemberGroupRes {}

service MemberService {
    rpc CreateMember(CreateMemberReq) returns (CreateMemberRes);
    rpc GetMember(GetMemberReq) returns (GetMemberRes);
    rpc GetMembers(GetMembersReq) returns (GetMembersRes);
    rpc ModifyMember(ModifyMemberReq) returns (ModifyMemberRes);
    rpc ResetPassword(ResetPasswordReq) returns (ResetPasswordRes){};
    rpc DeleteMember(DeleteMemberReq) returns (DeleteMemberRes){};

    rpc CreateMemberGroup(CreateMemberGroupReq) returns (CreateMemberGroupRes);
    rpc GetMemberGroups(GetMemberGroupsReq) returns (GetMemberGroupsRes);
    rpc DeleteMemberGroup(DeleteMemberGroupReq) returns (DeleteMemberGroupRes);
}
