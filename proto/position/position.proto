syntax = "proto3";
option go_package = "github.com/paper-trade-chatbot/be-proto/position";
package position;
import "general/general.proto";
import "product/product.proto";

enum TradeType {
    TradeType_None = 0;
    TradeType_Buy = 1;
    TradeType_Sell = 2;
}

enum PositionStatus {
    PositionStatus_None = 0;
    PositionStatus_Open = 1;
    PositionStatus_Close = 2;
}

enum ProcessState {
    ProcessState_None = 0;
    ProcessState_Open = 1;
    ProcessState_PendingToClose = 2;
    ProcessState_Close = 3;
}

message OpenPositionReq {
    uint64 memberID = 1;
    product.ProductType type = 2;
    string exchangeCode = 3;
    string productCode = 4;
    TradeType tradeType = 5;
    string amount = 6;
    string unitPrice = 7;
}

message OpenPositionRes {
    uint64 id = 1;
}

message PendingToClosePositionReq {
    uint64 id = 1;
    string closeAmount = 2; //為正值，代表該倉要減去多少數量
}

message PendingToClosePositionRes {
    bool preemptSuccess = 1; //是否搶到pending成功
}

message ClosePositionReq {
    uint64 id = 1;
    string closeAmount = 2; //為正值，代表該倉要減去多少數量
}

message ClosePositionRes {
    bool closed = 1;
    string amountLeft = 2;
}

message GetPositionsReq {
    repeated uint64 id = 1;
    repeated uint64 memberID = 2;
    optional product.ProductType type = 3;
    optional string exchangeCode = 4;
    optional string productCode = 5;
    optional TradeType tradeType = 6;
    optional PositionStatus status = 7;
    enum OrderBy {
        OrderBy_None = 0;
        OrderBy_ProductCode = 1;
        OrderBy_CreatedAt = 2;
    }
    enum OrderDirection {
        OrderDirection_None = 0;
        OrderDirection_ASC = 1;
        OrderDirection_DESC = -1;
    }
    message Order {
        OrderBy orderBy = 1;
        OrderDirection orderDirection = 2;
    }
    repeated Order order = 8;
    general.Pagination pagination = 9;
}

message Position {
    uint64 id = 1;
    uint64 memberID = 2;
    product.ProductType type = 3;
    string exchangeCode = 4;
    string productCode = 5;
    TradeType tradeType = 6;
    PositionStatus status = 7;
    ProcessState processState = 8;
    string amount = 9;
    string unitPrice = 10;
    int64 createdAt = 11;
    int64 updatedAt = 12;
}

message GetPositionsRes {
    repeated Position positions = 1;
    general.PaginationInfo paginationInfo = 2;
}

message ModifyPositionReq {
    uint64 id = 1;
    optional string amount = 2;
    optional string unitPrice = 3;
    optional PositionStatus status = 4;
}

message ModifyPositionRes {}

service PositionService {
    rpc OpenPosition(OpenPositionReq) returns (OpenPositionRes);
    rpc PendingToClosePosition(PendingToClosePositionReq) returns (PendingToClosePositionRes);
    rpc ClosePosition(ClosePositionReq) returns (ClosePositionRes);
    rpc GetPositions(GetPositionsReq) returns (GetPositionsRes);
    rpc ModifyPosition(ModifyPositionReq) returns (ModifyPositionRes);
}