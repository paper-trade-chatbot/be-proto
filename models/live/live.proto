syntax = "proto3";
option go_package = "models/live";

enum RoomStreamType {
    Audio = 0;
    Video = 1;
}

message GetLiveUserReq{
    string account = 1;
}

message GetLiveUserResponse{
    string account = 1;
    repeated string follows = 2;
    int32 followsCount = 3;
    repeated string followed = 4;
    int32 followedCount = 5;
}

message FollowRequest{
    string account = 1;
    string follows = 2;
}

message FollowResponse{
    string message = 1;
}

message UnfollowRequest{
    string account = 1;
    string unfollows = 2;
}

message UnfollowResponse{
    string message = 1;
}

message KeepViewRequest {
    string roomId = 1;
    string account = 2;
}

message KeepViewResponse {
    int32 views = 1;
    int64 followerCount = 2;
}

message IsFollowingReq{
    string account = 1;
    string follows = 2;
}

message IsFollowingResp{
    bool status = 1;
}

message EnterRoomRequest {
    string roomId = 1;
    string account = 2;
    int32 action = 3;
}

message EnterRoomResponse {
    string message = 1;
}

message ChattingReq {
    string account = 1;
    string roomId = 2;
    string msg = 3;
    string nickname = 4;
}

message ChattingResp {
    string message = 1;
}

message CreateRoomRequest {
    string account = 1;
}

message PublishRoomRequest {
    string roomId = 1;
    string cover = 2;
    string title = 3;
    string symbol = 4;
    string exchangeCode = 5;
    RoomStreamType roomStreamType = 6;
    repeated string tag = 7;
    string account = 8;
}

message KeepStreamRequest {
    string roomId = 1;
}

message CreateRoomResponse {
    string roomId = 1;
}

message LiveEmptyResponse {
}

message RoomListQuery {
    string orderBy = 1;
    string orderDirection = 2;
    repeated string patterns = 3;
    string account = 4;
}

message Room {
    string roomId = 1;
    string roomName = 2;
    string hostName = 3;
    string hostAccount = 4;
    int32 viewers = 5;
    int32 views = 6;
    int32 followers = 7;
    repeated string tags = 8;
    int64 duration = 9;
    string date = 10;
    RoomStreamType roomStreamType = 11;
    string cover = 12;
    Mp4Info mp4Info = 13;
}

message RoomList {
    repeated Room roomList = 1;
}

message GetRoomInfoReq {
    string roomId = 1;
    string account = 2;
}

message EndStreamRequest {
    string roomId = 1;
    string account = 2;
}

message RoomInfo {
    string account = 1;
    string userName = 2;
    string userPicture = 3;
    string cover = 4;
    string roomId = 5;
    string title = 6;
    string keepLiveAt = 7;
    string symbol = 8;
    string exchangeCode = 9;
    int32 followerCount = 10;
    repeated string tag = 11;
    RoomStreamType roomStreamType = 12;
    Mp4Info mp4Info = 13;  
    bool isFollowed = 14;
    string nickname = 15;
}

message LiveEmptyRequest {}

message HotTagList {
    repeated string tag = 1;
}

message KeepStreamResponse {
    int32 views = 1;
    int64 followerCount = 2;
}

message Mp4Info {
    bool isMp4 = 1;
    int64 timestamp = 2;
    string url = 3;
}

service LiveService{
    rpc GetUser(GetLiveUserReq) returns(GetLiveUserResponse){};
    rpc KeepView(KeepViewRequest) returns(KeepViewResponse){};
    rpc FollowUser(FollowRequest) returns(FollowResponse){};
    rpc UnfollowUser(UnfollowRequest) returns(UnfollowResponse){};
    rpc IsFollowing(IsFollowingReq) returns(IsFollowingResp){};
    rpc EnterRoom(EnterRoomRequest) returns(EnterRoomResponse){};
    rpc Chatting(ChattingReq) returns(ChattingResp){};
    rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse) {};
    rpc PublishRoom(PublishRoomRequest) returns (LiveEmptyResponse) {};
    rpc KeepStream(KeepStreamRequest) returns (KeepStreamResponse) {};
    rpc EndStream(EndStreamRequest) returns (LiveEmptyResponse) {};
    rpc GetRoomList(RoomListQuery) returns (RoomList) {};
    rpc GetRoomInfo(GetRoomInfoReq) returns (RoomInfo) {};
    rpc GetHotTags(LiveEmptyRequest) returns (HotTagList) {};
}
