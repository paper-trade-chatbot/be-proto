syntax = "proto3";
option go_package = "models/payment";

enum PaymentRoleCodeType {
    PAYMENT_ROLECODE_NONE = 0;
    PAYMENT_ROLECODE_MEMBER = 1;
    PAYMENT_ROLECODE_AGENT = 2;
    PAYMENT_ROLECODE_COMPANY = 3;
    PAYMENT_ROLECODE_ADMIN = 4;
}

message PaymentPagination {
    int32 page = 1;
    int32 pageSize = 2;
}

message PaymentPaginationInfo {
    int32 currentPage = 1;
    int32 nextPage = 2 ;
    int32 previousPage = 3;
    int32 totalPages = 4;
    int32 totalRows = 5;
}

message GetProviderReq {
    string name = 1;
    string orderBy = 2;
    string orderDirection = 3;
    string status = 4;
}

message GetGatewayReq {
    string provider = 1;
    string orderBy = 2;
    string orderDirection = 3;
    string status = 4;
}

message GetProviderResponse {
    repeated Provider providers = 1;
}

message GetGatewayResponse {
    repeated Gateway gateways = 1;
}

message Provider {
    string name = 1;
    string bank = 2;
    string bankAccount = 3;
    string contact = 4;
    string phone = 5;
    string email = 6;
    string status = 7;
    uint64 id = 8;
    string apiAccount = 9;
    string apiPassword = 10;
    string apiDescription = 11;
}

message Gateway {
    string provider = 1;
    string gateway = 2;
    double chargePercent = 3;
    double chargeAmount = 4;
    double minAmount = 5;
    double maxAmount = 6;
    string currency = 7;
    string settledTime = 8;
    int32 creditPeriod = 9;
    string status = 10;
    uint64 id = 11;
}

message GetGatewayInfoReq {
    string category = 1;
    string name = 2;
}

message GatewayInfos {
    repeated GatewayInfo gatewayinfos = 1;
}

message GatewayInfo {
    string category = 1;
    string name = 2;
    string status = 3;
}

message AddProviderResponse {
    string message = 1;
}

message ModifyProviderResponse {
    string message = 1;
}

message DeleteProviderResponse {
    string message = 1;
}

message AddGatewayResponse {
    string message = 1;
}

message ModifyGatewayResponse {
    string message = 1;
}

message DeleteGatewayResponse {
    string message = 1;
}

message GetCurrencyReq {
}

message GetCurrencyResponse {
    repeated PaymentCurrency currencies = 1;
}

message PaymentCurrency {
    string code = 1;
    string name = 2;
}

message DepositRequest {
    string account = 1;
    double amount = 2;
    string gateway = 3;
}

message DepositResponse {
    string depositAddress = 1;
}

message WithdrawRequest {
    string account = 1;
    string realName = 2;
    string location = 3;
    string bankUUID = 4;
    string bankName = 5;
    string bankAccount = 6;
    string swiftCode = 7;
    double amount = 8;
    string currency = 9;
    string bankCode = 10;
}

message WithdrawResponse {
    string message = 1;
}

message Notification {
    string memberOrderNo = 1;
    string orderNo = 2;
    string amount = 3;
    string status = 4;
    string sign = 5;
}

message NotifyResponse{
}

message GetExchangeRateReq{
}

message GetExchangeRateRes{
    repeated ExchangeRate exchangeRates = 1; 
}

message ExchangeRate {
    string currency = 1;
    string bank = 2;
    string link = 3;
    double buying = 4;
    double selling = 5;
    double customBuying = 6;
    double customSelling = 7;
    double customRate = 8;
    string publishTime = 9;
}

message AddExchangeRateReq{
    string currency = 1;
    string bank = 2;
    string link = 3;
    double customBuying = 4;
    double customSelling = 5;
    double customRate = 6;
}

message AddExchangeRateRes{
}

message EditExchangeRateReq{
    string currency = 1;
    string bank = 2;
    string link = 3;
    double customBuying = 4;
    double customSelling = 5;
    double customRate = 6;
}

message EditExchangeRateRes{
}

message DeleteExchangeRateReq{
    string currency = 1;
}

message DeleteExchangeRateRes{
}

message GetExchangeRatePercentReq {
}

message GetExchangeRatePercentRes {
    double buyPercent = 1;
    double sellPercent = 2;
}

message EditExchangeRatePercentReq {
    double buyPercent = 1;
    double sellPercent = 2;
}

message EditExchangeRatePercentRes {
}

message GetCurrencyExchangeReq {
}

message GetCurrencyExchangeRes {
    repeated CurrencyExchange currencyExchanges = 1;
}

message CurrencyExchange {
    string currency = 1;
    double exchangeRate = 2;
}

message GetWithdrawRecordReq {
    repeated string account = 1;
    string withdrawNumber = 2;
    repeated int32 progress = 3;
    int64 dateStart = 4;
    int64 dateEnd = 5;
    repeated string orderBy = 6;
    repeated string orderDirection = 7;
    PaymentPagination pagination = 8;
    int32 resultStatus = 9;
}

message WithdrawRecord {
    uint64 id = 1;
    string withdrawNumber = 2;
    string account = 3;
    string realName = 4;
    string phone = 5;
    int64 withdrawTime = 6;
    bool firstOrder = 7;
    double withdrawLimit = 8;
    string depositBankAccount = 9;
    string withdrawBankAccount = 10;
    int32 progress = 11;
    bool force = 12;
    repeated OperatorInfo operatorInfo = 13;
    double amount = 14;
    int32 result = 15;
    string reason = 16;
    int64 createdAt = 17;
    string userId = 18;
}

message OperatorInfo {
    string tag = 1;
    string account = 2;
    int64 time = 3;
}

message WithdrawRecords {
    repeated WithdrawRecord withdrawRecords = 1;
    PaymentPaginationInfo paginationInfo = 2;
}

message WithdrawInfo {
    string account = 1;
    string realName = 2;
    string phone = 3;
    string verifyStatus = 4;
    int64 withdrawTime = 5;
    bool firstOrder = 6;
    double withdrawLimit = 7;
    string depositBankAccount = 8;
    string withdrawBankAccount = 9;
}

message EditWithdrawInfoResponse {
    string message = 1;
}

message VerifyWithdrawReq {
    string operator = 1;
    uint64 id = 2;
    bool force = 3;
    string reason = 4;
    int32 result = 5;
}

message VerifyWithdrawResponse {
    string message = 1;
}

message GetRemitArrayReq {
    repeated string account = 1;
    uint64 id = 2;
    PaymentPagination pagination = 3;
}

message Remit {
    uint64 id = 1;
    string realName = 2;
    string location = 3;
    string bankName = 4;
    string swiftCode = 5;
    string bankAccount = 6;
    double amount = 7;
    string bankCode = 8;
}

message RemitArray {
    repeated Remit remitArray = 1;
    double totalAmount = 2;
    int64 totalRows = 3;
    PaymentPaginationInfo paginationInfo = 4;
}

message RemitReq {
    string operator = 1;
    string operatorIP = 2;
    repeated uint64 id = 3;
}

message AvailablePayMethodReq {
}

message AvailablePayMethodRes {
    string data = 1;
}

message RemitResponse {
    string message = 1;
}

message VerifyWithdrawWithConditionsReq {
    repeated string account = 1;
    string withdrawNumber = 2;
    repeated int32 progress = 3;
    int64 dateStart = 4;
    int64 dateEnd = 5;
    int64 amount  = 6;
    string operator = 7;
}

message VerifyWithdrawWithConditionsRes {
    string message = 1;
}


service PaymentService{
    rpc GetAvailablePayMethod(AvailablePayMethodReq) returns(AvailablePayMethodRes){};

    rpc GetProvider(GetProviderReq) returns(GetProviderResponse){};
    rpc AddProvider(Provider) returns(AddProviderResponse){};
    rpc ModifyProvider(Provider) returns(ModifyProviderResponse){};
    rpc DeleteProvider(Provider) returns(DeleteProviderResponse){};
    rpc GetGateway(GetGatewayReq) returns(GetGatewayResponse){};
    rpc AddGateway(Gateway) returns(AddGatewayResponse){};
    rpc ModifyGateway(Gateway) returns(ModifyGatewayResponse){};
    rpc DeleteGateway(Gateway) returns(DeleteGatewayResponse){};
    rpc GetGatewayInfo(GetGatewayInfoReq) returns(GatewayInfos){};
    rpc GetPaymentCurrency(GetCurrencyReq) returns(GetCurrencyResponse){};

    rpc Deposit(DepositRequest) returns(DepositResponse){};
    rpc Withdraw(WithdrawRequest) returns(WithdrawResponse){};
    rpc DepositNotify(Notification) returns(NotifyResponse){};

    rpc GetExchangeRate(GetExchangeRateReq) returns(GetExchangeRateRes){};
    rpc AddExchangeRate(AddExchangeRateReq) returns(AddExchangeRateRes){};
    rpc EditExchangeRate(EditExchangeRateReq) returns(EditExchangeRateRes){};
    rpc DeleteExchangeRate(DeleteExchangeRateReq) returns(DeleteExchangeRateRes){};
    rpc GetExchangeRatePercent(GetExchangeRatePercentReq) returns(GetExchangeRatePercentRes){};
    rpc EditExchangeRatePercent(EditExchangeRatePercentReq) returns(EditExchangeRatePercentRes){};
    rpc GetCurrencyExchange(GetCurrencyExchangeReq) returns(GetCurrencyExchangeRes){};

    rpc GetWithdrawRecord(GetWithdrawRecordReq) returns(WithdrawRecords){};

    rpc EditWithdrawInfo(WithdrawInfo) returns(EditWithdrawInfoResponse){};
    rpc VerifyWithdraw(VerifyWithdrawReq) returns(VerifyWithdrawResponse){};

    rpc GetRemitArray(GetRemitArrayReq) returns(RemitArray){};
    rpc Remit(RemitReq) returns(RemitResponse){};

    rpc VerifyWithdrawWithConditions(VerifyWithdrawWithConditionsReq) returns(VerifyWithdrawWithConditionsRes){};
}